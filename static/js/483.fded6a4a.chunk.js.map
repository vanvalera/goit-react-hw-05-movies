{"version":3,"file":"static/js/483.fded6a4a.chunk.js","mappings":"uMAqDA,UAhDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAkBR,GACfS,MAAK,SAAAN,GACJC,EAAUD,EACX,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,2BACGK,IAAW,SAAC,IAAD,KAEZ,wBACGF,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAD1B,6EAIdM,IAAKL,KAEP,uBAAIC,KACJ,yBAAG,cAAYC,OAXRJ,EADC,QAkBnB,C,+LClDDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFrD,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAiB,mCAAG,WAAMhC,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,oBACOyB,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBpB,EAAiB,mCAAG,WAAMR,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACeyB,EADf,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKK,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMlC,GAAN,uFACRwB,EAAAA,EAAAA,IAAA,gBACZxB,EADY,4BACeyB,EADf,2BADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Credits/Credits.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieCredits } from 'services/api';\n\nconst Credits = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = () => {\n      setLoading(true);\n\n      fetchMovieCredits(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      <ul>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Credits;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '61a74e45dda65dc7d6d2b2ec92323e86';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","fetchMovieCredits","then","catch","error","console","log","finally","map","id","profile_path","original_name","name","character","width","src","alt","axios","API_KEY","fetchTrending","response","data","results","fetchSearchKeyword","keyword","fetchMovieDetails","cast","fetchMovieReviews"],"sourceRoot":""}