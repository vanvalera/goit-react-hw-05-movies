{"version":3,"file":"static/js/884.a966bb3a.chunk.js","mappings":"+MAgGA,UA3FqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAqBjB,IAnBAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IAEXI,EAAAA,EAAAA,IAAkBV,GACfW,MAAK,SAAAC,GACJR,EAAaQ,EACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPX,GAAW,EACZ,GAIN,GAAE,CAACN,IAECG,EAAL,CAIA,MAQIA,GAAa,CAAC,EAPhBe,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAElB,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,mBAAQC,KAAK,SAAb,SAAsB,cAEvBvB,IAAW,SAAC,IAAD,IAEXF,IACC,4BACE,gBACE0B,MAAM,QACNC,IACEP,EAAW,yCAC2BA,GAD3B,6EAIbQ,IAAKP,KAEP,4BACE,0BACGN,EAAM,KAAGC,EAAaa,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAaZ,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,wBACGC,EAAOW,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,mBACA,4BACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMX,GAAG,UAAT,SAAmB,YAErB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,mBACA,SAAC,KAAD,SA1DL,CA8DF,C,+LC5FDY,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFrD,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBhC,EAAiB,mCAAG,WAAMV,GAAN,uFACRqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,oBACOsC,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAiB,mCAAG,WAAM7C,GAAN,uFACRqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,4BACesC,EADf,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKK,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAM/C,GAAN,uFACRqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,4BACesC,EADf,2BADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieDetails } from 'services/api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(detailMovie => {\n          setMovieInfo(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      {loading && <Loader />}\n\n      {movieInfo && (\n        <div>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"credits\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '61a74e45dda65dc7d6d2b2ec92323e86';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","fetchMovieDetails","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","type","width","src","alt","slice","map","genre","name","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchKeyword","keyword","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}