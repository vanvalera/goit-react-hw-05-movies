{"version":3,"file":"static/js/114.2a3367cc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/EditorList/EditorList.module.css?6fe9","pages/EditorList/EditorList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","components/MovieSearchForm/MovieSeacrhForm.jsx","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"EditorList_list__fDgab\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './EditorList.module.css';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {films.map(film => (\n        <li key={film.id} className={css.link}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Movies_main__zVRJ-\"};","import { useState, useEffect } from 'react';\n\nconst MovieSearchForm = ({ searchMovie, searchQuery, setSearchQuery }) => {\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setQuery(searchQuery);\n  }, [searchQuery]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchQuery(query);\n    searchMovie(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"searchMovie\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default MovieSearchForm;\n","import { fetchSearchKeyword } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport css from './Movies.module.css';\nimport MovieSearchForm from 'components/MovieSearchForm/MovieSeacrhForm';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchFilms, setsearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMovieText, setNoMovieText] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    if (query) {\n      setSearchQuery(query);\n    }\n    setLoading(true);\n    fetchSearchKeyword(query)\n      .then(searchResults => {\n        setsearchFilms(searchResults);\n        setNoMovieText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [setSearchParams, searchParams]);\n\n  const searchMovie = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main className={css.main}>\n      <MovieSearchForm\n        searchMovie={searchMovie}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n      />\n\n      {loading && <Loader />}\n\n      {noMovieText && (\n        <p>Sorry. There are no movies with this request. Please try again.</p>\n      )}\n\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '61a74e45dda65dc7d6d2b2ec92323e86';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["films","location","useLocation","className","css","map","film","to","id","state","from","title","searchMovie","searchQuery","setSearchQuery","useState","query","setQuery","useEffect","onSubmit","event","preventDefault","type","name","value","onChange","target","searchFilms","setsearchFilms","loading","setLoading","noMovieText","setNoMovieText","useSearchParams","searchParams","setSearchParams","get","fetchSearchKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","EditorList","axios","API_KEY","fetchTrending","response","data","results","keyword","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}