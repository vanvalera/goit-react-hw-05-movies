{"version":3,"file":"static/js/595.9d0c6be5.chunk.js","mappings":"2LACA,GAAgB,KAAO,0B,SC4BvB,EAzBmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGJ,EAAMK,KAAI,SAAAC,GAAI,OACb,eAAkBH,UAAWC,EAAAA,KAA7B,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,SACGK,EAAKK,SAFDL,EAAKE,GADD,KASpB,C,oHCjBD,EAAuB,qB,SCgDvB,EA3Ce,WACb,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAsBA,OACE,kBAAMf,UAAWC,EAAjB,WACE,kBAAMe,SAtBU,SAAAC,GAClBA,EAAMC,iBAEN,IAAMC,EAAaF,EAAMG,OAAOC,SAASC,YAAYC,MAErDV,GAAW,IAEXW,EAAAA,EAAAA,IAAmBL,GAChBM,MAAK,SAAAC,GACJf,EAAee,GACfX,EAAwC,IAAzBW,EAAcC,OAC9B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPnB,GAAW,EACZ,GACJ,EAIG,WACE,kBAAOoB,KAAK,OAAOC,KAAK,iBACxB,mBAAQD,KAAK,SAAb,SAAsB,cAGvBrB,IAAW,SAACuB,EAAA,EAAD,IAEXrB,IACC,uBAAG,oEAGJJ,IAAe,SAAC0B,EAAA,EAAD,CAAYvC,MAAOa,MAGxC,C,+LC7CD2B,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKblB,EAAkB,mCAAG,WAAMmB,GAAN,uFACTN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFrD,cAC1BH,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBE,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAiB,mCAAG,WAAMD,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKM,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/EditorList.module.css?b5bc","pages/EditorList.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"EditorList_list__o08AI\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './EditorList.module.css';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {films.map(film => (\n        <li key={film.id} className={css.link}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Movies_main__GxnlD\"};","import { fetchSearchKeyword } from 'services/api';\nimport { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from './EditorList';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchFilms, setsearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMovieText, setNoMovieText] = useState(false);\n\n  const searchMovie = event => {\n    event.preventDefault(); // Предотвращаем отправку формы по умолчанию\n\n    const queryMovie = event.target.elements.searchMovie.value;\n\n    setLoading(true);\n\n    fetchSearchKeyword(queryMovie)\n      .then(searchResults => {\n        setsearchFilms(searchResults);\n        setNoMovieText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main className={css.main}>\n      <form onSubmit={searchMovie}>\n        <input type=\"text\" name=\"searchMovie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {loading && <Loader />}\n\n      {noMovieText && (\n        <p>Sorry. There are no movies with this request. Please try again.</p>\n      )}\n\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '61a74e45dda65dc7d6d2b2ec92323e86';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["films","location","useLocation","className","css","map","film","to","id","state","from","title","useState","searchFilms","setsearchFilms","loading","setLoading","noMovieText","setNoMovieText","onSubmit","event","preventDefault","queryMovie","target","elements","searchMovie","value","fetchSearchKeyword","then","searchResults","length","catch","error","console","log","finally","type","name","Loader","EditorList","axios","API_KEY","fetchTrending","response","data","results","keyword","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}