{"version":3,"file":"static/js/186.bc721e11.chunk.js","mappings":"uMAkDA,UA9CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAkBR,GACfS,MAAK,SAAAN,GACJC,EAAWD,EACZ,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,gCACGK,IAAW,SAAC,IAAD,IACQ,IAAnBF,EAAQY,SACP,0BACE,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,YAAUA,EAAOC,WACrB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBjB,EAAQY,SACP,yBAAK,iDAIZ,C,+LC9CDM,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACJF,EAAAA,EAAAA,IAAA,qCAAwCC,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFrD,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAiB,mCAAG,WAAM7B,GAAN,uFACRqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,oBACOsB,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAiB,mCAAG,WAAM9B,GAAN,uFACRqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACesB,EADf,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKM,MAJU,2CAAH,sDAOjBvB,EAAiB,mCAAG,WAAMR,GAAN,uFACRqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACesB,EADf,2BADQ,cACzBE,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsFilms = () => {\n      setLoading(true);\n\n      fetchMovieReviews(movieId)\n        .then(reviews => {\n          setReviews(reviews);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchReviewsFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author : {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>Sorry, We havent any reviews for this film</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '61a74e45dda65dc7d6d2b2ec92323e86';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","fetchMovieReviews","then","catch","error","console","log","finally","length","map","review","author","content","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchKeyword","keyword","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}